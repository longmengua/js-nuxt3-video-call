# Use the official Node.js image as the base image
FROM node:16-alpine AS build-stage

# Build time arguments
ARG APP_ENV=""
ARG ENV_FILE_NAME=""
ARG PAT=""

# Add "set -e" to stop execution on error
RUN set -e

# Set the working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application code
COPY . .

# Download .env.prod from github private repo, that's why it needs pat of github
RUN if [ "$APP_ENV" = "prod" ]; then curl -H "Authorization: token $PAT" -LJO https://raw.githubusercontent.com/karwee/karwee-devops/main/wmch/web/.env.prod; fi

# Copy the environment file
RUN cp "$ENV_FILE_NAME" .env

# Build the application for static site generation
RUN npm run generate || { exit 1; }

# Use a lightweight web server to serve the static files
FROM nginx:alpine AS production-stage

# Add "set -e" to stop execution on error
RUN set -e

# Copy the generated static files from the build stage
COPY --from=build-stage /app/dist /usr/share/nginx/html

# Expose the port the app runs on
EXPOSE 80

# Command to run the application
CMD ["nginx", "-g", "daemon off;"]
